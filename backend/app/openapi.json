{
  "openapi": "3.1.0",
  "info": {
    "title": "IdeaHub API",
    "version": "0.4.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "example": {
                "email": "usuario@exemplo.com",
                "password": "senha12345"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccess"
                },
                "example": {
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "name": "João Silva",
                  "email": "usuario@exemplo.com"
                }
              }
            }
          },
          "400": {
            "description": "Email não cadastrado ou request inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                },
                "example": {
                  "errors": [{ "field": "email", "message": "Email não cadastrado" }]
                }
              }
            }
          },
          "401": {
            "description": "Senha incorreta",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                },
                "example": {
                  "errors": [{ "field": "password", "message": "Senha incorreta" }]
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                },
                "example": {
                  "errors": [{ "field": "non_field", "message": "Erro interno no login" }]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register",
        "operationId": "register_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              },
              "example": {
                "email": "usuario@exemplo.com",
                "name": "João Silva",
                "password": "senha12345"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterSuccess"
                },
                "example": {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "email": "novousuario@exemplo.com"
                }
              }
            }
          },
          "400": {
            "description": "Senha inválida ou email já em uso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                },
                "example": {
                  "errors": [{ "field": "password", "message": "Senha inválida: deve ter ao menos 8 caracteres, conter letras e números." }]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Valida token",
        "operationId": "token_auth_token_post",
        "security": [ { "BearerAuth": [] } ],
        "responses": {
          "200": {
            "description": "Token válido",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokenResponse" },
                "example": { "validated": true }
              }
            }
          },
          "401": {
            "description": "Token inválido ou expirado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationErrorResponse" },
                "example": { "errors": [{ "field": "token", "message": "Token inválido ou expirado" }] }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Obter dados do usuário autenticado",
        "operationId": "me_auth_me_post",
        "security": [ { "BearerAuth": [] } ],
        "responses": {
          "200": {
            "description": "Dados do usuário",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MeResponse" },
                "example": { "name": "João Silva", "email": "usuario@exemplo.com" }
              }
            }
          },
          "401": {
            "description": "Token inválido ou expirado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationErrorResponse" },
                "example": { "errors": [{ "field": "token", "message": "Token inválido ou expirado" }] }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationErrorResponse" },
                "example": { "errors": [{ "field": "email", "message": "Usuário não encontrado" }] }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationErrorResponse" },
                "example": { "errors": [{ "field": "non_field", "message": "Erro ao obter dados do usuário" }] }
              }
            }
          }
        }
      }
    },
    "/api/agent/idea/{idea_id}": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Criar Chat a partir de uma Idea",
        "description": "Cria um chat ligado a uma ideia (usuário autenticado). Retorna o chat_id.",
        "operationId": "create_chat_api_agent_idea_idea_id_post",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "idea_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Idea ID"
            },
            "description": "ID único da ideia"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCreateResponse"
                },
                "example": {
                  "chat_id": "550e8400-e29b-41d4-a716-446655440000"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação ausente ou inválido"
          }
        }
      }
    },
    "/api/agent/{chat_id}": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Enviar mensagem ao chat",
        "description": "Envia uma mensagem do usuário para o chat e retorna a resposta do AI.",
        "operationId": "post_message_api_agent_chat_id_message_post",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chat ID"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message",
              "example": "Olá, como você pode me ajudar?"
            },
            "description": "Mensagem para enviar ao agente"
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta do AI retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Obter Chat",
        "description": "Obtém uma conversa específica por ID.",
        "operationId": "get_chat_api_agent_chat_id_get",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chat ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat retornado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponseItem"
                },
                "example": {
                  "chat_id": "550e8400-e29b-41d4-a716-446655440000",
                  "user_id": "123e4567-e89b-12d3-a456-426614174000",
                  "idea_id": "660e8400-e29b-41d4-a716-446655440001",
                  "message": "Olá, como posso ajudar?",
                  "sender": "AI"
                }
              }
            }
          },
          "500": {
            "description": "Erro ao obter chat"
          }
        }
      }
    },
    "/api/agent/": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Listar Chats",
        "description": "Obtém todas as conversas do usuário autenticado.",
        "operationId": "get_chats_api_agent__get",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de chats retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatResponseItem"
                  }
                },
                "example": [
                  {
                    "chat_id": "550e8400-e29b-41d4-a716-446655440000",
                    "user_id": "123e4567-e89b-12d3-a456-426614174000",
                    "idea_id": "660e8400-e29b-41d4-a716-446655440001",
                    "message": "Olá, como posso ajudar?",
                    "sender": "AI"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Token de autenticação ausente ou inválido"
          },
          "500": {
            "description": "Erro ao obter chats"
          }
        }
      }
    },
    "/api/idea/": {
      "post": {
        "tags": [
          "Ideas"
        ],
        "summary": "Criar Ideia",
        "description": "Cria uma nova ideia. O user_id é extraído automaticamente do token JWT. A classificação AI é gerada automaticamente.",
        "operationId": "create_idea_api_idea__post",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaCreate"
              },
              "example": {
                "title": "Aplicativo de delivery de comida saudável para universitários",
                "tags": ["teste", "jogo", "git"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Ideia criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaResponse"
                },
                "example": {
                  "id": "550e8400-e29b-41d4-a716-446655440000",
                  "user_id": "123e4567-e89b-12d3-a456-426614174000",
                  "title": "Aplicativo de delivery de comida saudável para universitários",
                  "ai_classification": "App delivery comida saudável universitários",
                  "status": "DRAFT"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação ausente ou inválido"
          },
          "500": {
            "description": "Erro ao criar ideia no banco de dados"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Ideas"
        ],
        "summary": "Listar Ideias",
        "description": "Obtém todas as ideias do usuário autenticado.",
        "operationId": "get_ideas_api_idea__get",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ideias retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdeaResponse"
                  }
                },
                "example": [
                  {
                    "id": "550e8400-e29b-41d4-a716-446655440000",
                    "user_id": "123e4567-e89b-12d3-a456-426614174000",
                    "title": "Aplicativo de delivery de comida saudável",
                    "ai_classification": "App delivery comida saudável",
                    "status": "DRAFT"
                  },
                  {
                    "id": "660e8400-e29b-41d4-a716-446655440001",
                    "user_id": "123e4567-e89b-12d3-a456-426614174000",
                    "title": "Plataforma de gestão de projetos",
                    "ai_classification": "Plataforma gestão projetos",
                    "status": "ACTIVE"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Token de autenticação ausente ou inválido"
          },
          "500": {
            "description": "Erro ao obter ideias"
          }
        }
      }
    },
    "/api/roadmap/create": {
      "post": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Criar Roadmap",
        "description": "Cria um roadmap completo para uma ideia existente. O sistema gera automaticamente os passos (steps), tarefas (tasks) e uma imagem visual do roadmap usando IA.",
        "operationId": "create_roadmap_api_roadmap_create_post",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "idea_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Idea ID"
            },
            "description": "ID único da ideia para gerar o roadmap",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          {
            "name": "exported_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Exported To"
            },
            "description": "Plataforma de destino para exportação do roadmap",
            "example": "notion"
          }
        ],
        "responses": {
          "200": {
            "description": "Roadmap criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoadmapCreateResponse"
                },
                "example": {
                  "roadmap_id": "660e8400-e29b-41d4-a716-446655440001",
                  "image_generated": true,
                  "image_path": "/api/roadmap/660e8400-e29b-41d4-a716-446655440001/image"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação ausente ou inválido"
          },
          "404": {
            "description": "Ideia não encontrada"
          },
          "500": {
            "description": "Erro ao criar roadmap no banco de dados ou ao gerar conteúdo do roadmap"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/roadmap/{roadmap_id}": {
      "get": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Obter Roadmap",
        "description": "Retorna os dados completos do roadmap incluindo todos os steps e tasks.",
        "operationId": "get_roadmap_api_roadmap_roadmap_id_get",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "roadmap_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Roadmap ID"
            },
            "description": "ID único do roadmap",
            "example": "660e8400-e29b-41d4-a716-446655440001"
          }
        ],
        "responses": {
          "200": {
            "description": "Roadmap retornado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoadmapDetail"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação ausente ou inválido"
          },
          "404": {
            "description": "Roadmap não encontrado"
          },
          "500": {
            "description": "Erro ao buscar roadmap"
          }
        }
      }
    },
    "/api/roadmap/{roadmap_id}/image": {
      "get": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Obter Imagem do Roadmap",
        "description": "Retorna a imagem visual do roadmap em formato PNG. Se a imagem não existir, será gerada automaticamente.",
        "operationId": "get_roadmap_image_api_roadmap_roadmap_id_image_get",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "roadmap_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Roadmap ID"
            },
            "description": "ID único do roadmap",
            "example": "660e8400-e29b-41d4-a716-446655440001"
          }
        ],
        "responses": {
          "200": {
            "description": "Imagem do roadmap retornada com sucesso",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação ausente ou inválido"
          },
          "404": {
            "description": "Roadmap não encontrado ou sem steps para gerar imagem"
          },
          "500": {
            "description": "Erro ao gerar ou buscar imagem"
          }
        }
      }
    },
    "/api/idea/{idea_id}": {
      "get": {
        "tags": [
          "Ideas"
        ],
        "summary": "Obter Ideia",
        "description": "Obtém uma ideia específica por ID. Apenas o dono da ideia pode acessá-la.",
        "operationId": "get_idea_api_idea__idea_id__get",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "idea_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Idea ID"
            },
            "description": "ID único da ideia"
          }
        ],
        "responses": {
          "200": {
            "description": "Ideia retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaResponse"
                },
                "example": {
                  "id": "550e8400-e29b-41d4-a716-446655440000",
                  "user_id": "123e4567-e89b-12d3-a456-426614174000",
                  "title": "Aplicativo de delivery de comida saudável",
                  "ai_classification": "App delivery comida saudável",
                  "status": "DRAFT"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação ausente ou inválido"
          },
          "403": {
            "description": "Você não tem permissão para acessar esta ideia"
          },
          "404": {
            "description": "Ideia não encontrada"
          }
        }
      },
      "patch": {
        "tags": [
          "Ideas"
        ],
        "summary": "Editar Ideia",
        "description": "Edita uma ideia existente. Pode atualizar título (regenera AI classification), status ou conteúdo. Apenas o dono pode editar.",
        "operationId": "edit_idea_api_idea__idea_id__patch",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "idea_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Idea ID"
            },
            "description": "ID único da ideia"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaEdit"
              },
              "example": {
                "title": "Aplicativo de delivery de comida orgânica",
                "status": "ACTIVE"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ideia editada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaResponse"
                },
                "example": {
                  "id": "550e8400-e29b-41d4-a716-446655440000",
                  "user_id": "123e4567-e89b-12d3-a456-426614174000",
                  "title": "Aplicativo de delivery de comida orgânica",
                  "ai_classification": "App delivery comida orgânica",
                  "status": "ACTIVE"
                }
              }
            }
          },
          "400": {
            "description": "Nenhum campo para editar foi fornecido"
          },
          "401": {
            "description": "Token de autenticação ausente ou inválido"
          },
          "403": {
            "description": "Você não tem permissão para editar esta ideia"
          },
          "404": {
            "description": "Ideia não encontrada"
          },
          "500": {
            "description": "Erro ao editar ideia"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ideas"
        ],
        "summary": "Deletar Ideia",
        "description": "Deleta uma ideia existente. Apenas o dono pode deletar.",
        "operationId": "delete_idea_api_idea__idea_id__delete",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "idea_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Idea ID"
            },
            "description": "ID único da ideia"
          }
        ],
        "responses": {
          "200": {
            "description": "Ideia deletada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Ideia deletada com sucesso"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação ausente ou inválido"
          },
          "403": {
            "description": "Você não tem permissão para deletar esta ideia"
          },
          "404": {
            "description": "Ideia não encontrada"
          },
          "500": {
            "description": "Erro ao deletar ideia"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT obtido através do endpoint /auth/login"
      }
    },
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Login": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "example": "usuario@exemplo.com"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "example": "senha12345"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "Login"
      },
      "Register": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "example": "novousuario@exemplo.com"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "example": "João Silva"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Mínimo 8 caracteres, deve conter letras e números",
            "example": "senha12345"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "password"
        ],
        "title": "Register"
      },
      "IdeaCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Título ou descrição da ideia",
            "example": "Aplicativo de delivery de comida saudável para universitários"
          },
          "tags": {
            "type": "array",
            "items": { "type": "string" },
            "title": "Tags",
            "example": ["teste", "app"]
          }
        },
        "type": "object",
        "required": ["title"],
        "title": "IdeaCreate"
      },
      "IdeaResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "ID",
            "description": "ID único da ideia"
          },
          "user_id": {
            "type": "string",
            "title": "User ID",
            "description": "ID do usuário que criou a ideia"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Título ou descrição da ideia"
          },
          "ai_classification": {
            "type": "string",
            "title": "AI Classification",
            "description": "Classificação gerada automaticamente pela IA"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status da ideia (DRAFT, ACTIVE, ARCHIVED, etc.)"
          }
        },
        "type": "object",
        "required": ["id", "user_id", "title", "ai_classification", "status"],
        "title": "IdeaResponse"
      },
      "IdeaEdit": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Novo título da ideia (regenera a classificação AI)",
            "example": "Aplicativo de delivery de comida orgânica"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "example": "ACTIVE"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Conteúdo bruto da ideia",
            "example": "Descrição detalhada do projeto..."
          }
        },
        "type": "object",
        "title": "IdeaEdit"
      },
      "LoginSuccess": {
        "properties": {
          "access_token": { "type": "string" },
          "token_type": { "type": "string" },
          "name": { "type": "string", "nullable": true },
          "email": { "type": "string", "format": "email", "nullable": true }
        },
        "type": "object",
        "required": ["access_token", "token_type"],
        "title": "LoginSuccess"
      },
      "RegisterSuccess": {
        "properties": {
          "id": { "type": "string" },
          "email": { "type": "string", "format": "email" }
        },
        "type": "object",
        "required": ["id", "email"],
        "title": "RegisterSuccess"
      },
      "ErrorDetail": {
        "properties": {
          "field": { "type": "string" },
          "message": { "type": "string" }
        },
        "type": "object",
        "required": ["field", "message"],
        "title": "ErrorDetail"
      },
      "ValidationErrorResponse": {
        "properties": {
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ErrorDetail" }
          }
        },
        "type": "object",
        "required": ["errors"],
        "title": "ValidationErrorResponse"
      },
      "TokenResponse": {
        "properties": {
          "validated": { "type": "boolean" }
        },
        "type": "object",
        "required": ["validated"],
        "title": "TokenResponse"
      },
      "MeResponse": {
        "properties": {
          "name": { "type": "string", "nullable": true },
          "email": { "type": "string", "format": "email", "nullable": true }
        },
        "type": "object",
        "title": "MeResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [ { "type": "string" }, { "type": "integer" } ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "ChatCreateResponse": {
        "properties": {
          "chat_id": {
            "type": "string",
            "title": "Chat ID",
            "description": "ID único do chat criado"
          }
        },
        "type": "object",
        "required": ["chat_id"],
        "title": "ChatCreateResponse"
      },
      "ChatResponseItem": {
        "properties": {
          "chat_id": { "type": "string", "title": "Chat ID" },
          "user_id": { "type": "string", "title": "User ID" },
          "idea_id": { "type": "string", "title": "Idea ID" },
          "message": { "type": "string", "title": "Message" },
          "sender": { "type": "string", "title": "Sender" }
        },
        "type": "object",
        "required": ["chat_id", "user_id", "idea_id", "message", "sender"],
        "title": "ChatResponseItem"
      },
      "RoadmapResponse": {
        "properties": {
          "roadmap_id": { "type": "string", "title": "Roadmap ID", "description": "ID único do roadmap criado (UUID)" }
        },
        "type": "object",
        "required": ["roadmap_id"],
        "title": "RoadmapResponse"
      },
      "RoadmapCreateResponse": {
        "properties": {
          "roadmap_id": { "type": "string", "title": "Roadmap ID", "description": "ID único do roadmap criado (UUID)" },
          "image_generated": { "type": "boolean", "title": "Image Generated", "description": "Indica se a imagem foi gerada com sucesso" },
          "image_path": { "type": "string", "title": "Image Path", "description": "Caminho para acessar a imagem do roadmap" }
        },
        "type": "object",
        "required": ["roadmap_id", "image_generated"],
        "title": "RoadmapCreateResponse"
      },
      "RoadmapDetail": {
        "properties": {
          "id": { "type": "string", "title": "ID", "description": "ID único do roadmap" },
          "idea_id": { "type": "string", "title": "Idea ID", "description": "ID da ideia associada" },
          "exported_to": { "type": "string", "title": "Exported To", "description": "Plataforma de exportação" },
          "steps": { "type": "array", "items": { "$ref": "#/components/schemas/RoadmapStep" }, "title": "Steps", "description": "Lista de passos do roadmap" }
        },
        "type": "object",
        "required": ["id", "idea_id", "steps"],
        "title": "RoadmapDetail"
      },
      "RoadmapStep": {
        "properties": {
          "id": { "type": "string", "title": "ID", "description": "ID único do step" },
          "step_order": { "type": "integer", "title": "Step Order", "description": "Ordem do step no roadmap" },
          "title": { "type": "string", "title": "Title", "description": "Título do step" },
          "description": { "type": "string", "title": "Description", "description": "Descrição do step" },
          "tasks": { "type": "array", "items": { "$ref": "#/components/schemas/RoadmapTask" }, "title": "Tasks", "description": "Lista de tarefas do step" }
        },
        "type": "object",
        "required": ["id", "step_order", "title", "description", "tasks"],
        "title": "RoadmapStep"
      },
      "RoadmapTask": {
        "properties": {
          "id": { "type": "string", "title": "ID", "description": "ID único da task" },
          "task_order": { "type": "integer", "title": "Task Order", "description": "Ordem da task dentro do step" },
          "description": { "type": "string", "title": "Description", "description": "Descrição da tarefa" },
          "suggested_tools": { "type": "array", "items": { "type": "string" }, "title": "Suggested Tools", "description": "Ferramentas sugeridas para a tarefa" }
        },
        "type": "object",
        "required": ["id", "task_order", "description", "suggested_tools"],
        "title": "RoadmapTask"
      }
    }
  }
}